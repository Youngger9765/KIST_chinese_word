{
  "service": {
    "service": "aws-nodejs",
    "serviceObject": {
      "name": "aws-nodejs"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "stage": "dev",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-nodejs-dev-hello"
            }
          },
          "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-nodejs-dev-handler_html_0_word_list"
            }
          },
          "HtmlUnderscore1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-nodejs-dev-html_1"
            }
          },
          "HtmlUnderscore2LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-nodejs-dev-html_2"
            }
          },
          "HtmlUnderscore3LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-nodejs-dev-html_3"
            }
          },
          "HtmlUnderscore4LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-nodejs-dev-html_4"
            }
          },
          "HtmlUnderscore5LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-nodejs-dev-html_5"
            }
          },
          "HtmlUnderscore6LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-nodejs-dev-html_6"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aws-nodejs",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-nodejs-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-nodejs-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aws-nodejs",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z/aws-nodejs.zip"
              },
              "Handler": "handler.hello",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-nodejs-dev-hello",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HelloLogGroup"
            ]
          },
          "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z/aws-nodejs.zip"
              },
              "Handler": "handler_html_0_word_list.landingPage",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-nodejs-dev-handler_html_0_word_list",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLogGroup"
            ]
          },
          "HtmlUnderscore1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z/aws-nodejs.zip"
              },
              "Handler": "handler_html_1.landingPage",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-nodejs-dev-html_1",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HtmlUnderscore1LogGroup"
            ]
          },
          "HtmlUnderscore2LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z/aws-nodejs.zip"
              },
              "Handler": "handler_html_2.landingPage",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-nodejs-dev-html_2",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HtmlUnderscore2LogGroup"
            ]
          },
          "HtmlUnderscore3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z/aws-nodejs.zip"
              },
              "Handler": "handler_html_3.landingPage",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-nodejs-dev-html_3",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HtmlUnderscore3LogGroup"
            ]
          },
          "HtmlUnderscore4LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z/aws-nodejs.zip"
              },
              "Handler": "handler_html_4.landingPage",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-nodejs-dev-html_4",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HtmlUnderscore4LogGroup"
            ]
          },
          "HtmlUnderscore5LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z/aws-nodejs.zip"
              },
              "Handler": "handler_html_5.landingPage",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-nodejs-dev-html_5",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HtmlUnderscore5LogGroup"
            ]
          },
          "HtmlUnderscore6LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z/aws-nodejs.zip"
              },
              "Handler": "handler_html_6.landingPage",
              "Runtime": "nodejs12.x",
              "FunctionName": "aws-nodejs-dev-html_6",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HtmlUnderscore6LogGroup"
            ]
          },
          "HelloLambdaVersionhkRfLbOYlbaAV5TyUIivHgzjI7fDrJKhKnF9CzPRk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "Lk4VFCk5BRqnsNsl+m478XQn2JdPkJDq4berU46FXYM="
            }
          },
          "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaVersionprAOq4sFths8KXHFV39iCdB1eswtloCJZSEy2BregwY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaFunction"
              },
              "CodeSha256": "Lk4VFCk5BRqnsNsl+m478XQn2JdPkJDq4berU46FXYM="
            }
          },
          "HtmlUnderscore1LambdaVersionAxexCTxYJUkNBZkUxwpMrCNTZdLL6S4LqRDHE4Ug4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HtmlUnderscore1LambdaFunction"
              },
              "CodeSha256": "Lk4VFCk5BRqnsNsl+m478XQn2JdPkJDq4berU46FXYM="
            }
          },
          "HtmlUnderscore2LambdaVersionIoNm34aYA2ix68gwqwYP3bHN7TwbVBeKt5hM1lrxbI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HtmlUnderscore2LambdaFunction"
              },
              "CodeSha256": "Lk4VFCk5BRqnsNsl+m478XQn2JdPkJDq4berU46FXYM="
            }
          },
          "HtmlUnderscore3LambdaVersionJfD6rcm2XU5hOB0nlmpgBSO6N4YlzwxJ1MU4MYKXaU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HtmlUnderscore3LambdaFunction"
              },
              "CodeSha256": "Lk4VFCk5BRqnsNsl+m478XQn2JdPkJDq4berU46FXYM="
            }
          },
          "HtmlUnderscore4LambdaVersionncbK1x3zjH4GFNcOYPOjzIUBIlIYUo71N32KqWLL9I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HtmlUnderscore4LambdaFunction"
              },
              "CodeSha256": "Lk4VFCk5BRqnsNsl+m478XQn2JdPkJDq4berU46FXYM="
            }
          },
          "HtmlUnderscore5LambdaVersionYlHugVsFvZ08iHIoIkWtaCSKRTTo4wqia3YA9oXyJw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HtmlUnderscore5LambdaFunction"
              },
              "CodeSha256": "Lk4VFCk5BRqnsNsl+m478XQn2JdPkJDq4berU46FXYM="
            }
          },
          "HtmlUnderscore6LambdaVersionmnds7OA7rH2RvvFa6QBHMwOllcnF1xxJNvpmJOy4Fus": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HtmlUnderscore6LambdaFunction"
              },
              "CodeSha256": "Lk4VFCk5BRqnsNsl+m478XQn2JdPkJDq4berU46FXYM="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-aws-nodejs",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceLandingDashpageDash0DashwordDashlist": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "landing-page-0-word-list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLandingDashpageDash1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "landing-page-1",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLandingDashpageDash2": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "landing-page-2",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLandingDashpageDash3": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "landing-page-3",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLandingDashpageDash4": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "landing-page-4",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLandingDashpageDash5": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "landing-page-5",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLandingDashpageDash6": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "landing-page-6",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodLandingDashpageDash0DashwordDashlistGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLandingDashpageDash0DashwordDashlist"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLandingDashpageDash1Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLandingDashpageDash1"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HtmlUnderscore1LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLandingDashpageDash2Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLandingDashpageDash2"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HtmlUnderscore2LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLandingDashpageDash3Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLandingDashpageDash3"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HtmlUnderscore3LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLandingDashpageDash4Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLandingDashpageDash4"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HtmlUnderscore4LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLandingDashpageDash5Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLandingDashpageDash5"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HtmlUnderscore5LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLandingDashpageDash6Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLandingDashpageDash6"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HtmlUnderscore6LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1618992563132": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodLandingDashpageDash0DashwordDashlistGet",
              "ApiGatewayMethodLandingDashpageDash1Get",
              "ApiGatewayMethodLandingDashpageDash2Get",
              "ApiGatewayMethodLandingDashpageDash3Get",
              "ApiGatewayMethodLandingDashpageDash4Get",
              "ApiGatewayMethodLandingDashpageDash5Get",
              "ApiGatewayMethodLandingDashpageDash6Get"
            ]
          },
          "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HtmlUnderscore1LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HtmlUnderscore1LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HtmlUnderscore2LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HtmlUnderscore2LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HtmlUnderscore3LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HtmlUnderscore3LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HtmlUnderscore4LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HtmlUnderscore4LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HtmlUnderscore5LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HtmlUnderscore5LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HtmlUnderscore6LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HtmlUnderscore6LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersionhkRfLbOYlbaAV5TyUIivHgzjI7fDrJKhKnF9CzPRk"
            }
          },
          "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaVersionprAOq4sFths8KXHFV39iCdB1eswtloCJZSEy2BregwY"
            }
          },
          "HtmlUnderscore1LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HtmlUnderscore1LambdaVersionAxexCTxYJUkNBZkUxwpMrCNTZdLL6S4LqRDHE4Ug4"
            }
          },
          "HtmlUnderscore2LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HtmlUnderscore2LambdaVersionIoNm34aYA2ix68gwqwYP3bHN7TwbVBeKt5hM1lrxbI"
            }
          },
          "HtmlUnderscore3LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HtmlUnderscore3LambdaVersionJfD6rcm2XU5hOB0nlmpgBSO6N4YlzwxJ1MU4MYKXaU"
            }
          },
          "HtmlUnderscore4LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HtmlUnderscore4LambdaVersionncbK1x3zjH4GFNcOYPOjzIUBIlIYUo71N32KqWLL9I"
            }
          },
          "HtmlUnderscore5LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HtmlUnderscore5LambdaVersionYlHugVsFvZ08iHIoIkWtaCSKRTTo4wqia3YA9oXyJw"
            }
          },
          "HtmlUnderscore6LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HtmlUnderscore6LambdaVersionmnds7OA7rH2RvvFa6QBHMwOllcnF1xxJNvpmJOy4Fus"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "hello": {
        "handler": "handler.hello",
        "events": [],
        "name": "aws-nodejs-dev-hello",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HelloLambdaVersionhkRfLbOYlbaAV5TyUIivHgzjI7fDrJKhKnF9CzPRk"
      },
      "handler_html_0_word_list": {
        "handler": "handler_html_0_word_list.landingPage",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "landing-page-0-word-list",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-nodejs-dev-handler_html_0_word_list",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HandlerUnderscorehtmlUnderscore0UnderscorewordUnderscorelistLambdaVersionprAOq4sFths8KXHFV39iCdB1eswtloCJZSEy2BregwY"
      },
      "html_1": {
        "handler": "handler_html_1.landingPage",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "landing-page-1",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-nodejs-dev-html_1",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HtmlUnderscore1LambdaVersionAxexCTxYJUkNBZkUxwpMrCNTZdLL6S4LqRDHE4Ug4"
      },
      "html_2": {
        "handler": "handler_html_2.landingPage",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "landing-page-2",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-nodejs-dev-html_2",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HtmlUnderscore2LambdaVersionIoNm34aYA2ix68gwqwYP3bHN7TwbVBeKt5hM1lrxbI"
      },
      "html_3": {
        "handler": "handler_html_3.landingPage",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "landing-page-3",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-nodejs-dev-html_3",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HtmlUnderscore3LambdaVersionJfD6rcm2XU5hOB0nlmpgBSO6N4YlzwxJ1MU4MYKXaU"
      },
      "html_4": {
        "handler": "handler_html_4.landingPage",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "landing-page-4",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-nodejs-dev-html_4",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HtmlUnderscore4LambdaVersionncbK1x3zjH4GFNcOYPOjzIUBIlIYUo71N32KqWLL9I"
      },
      "html_5": {
        "handler": "handler_html_5.landingPage",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "landing-page-5",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-nodejs-dev-html_5",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HtmlUnderscore5LambdaVersionYlHugVsFvZ08iHIoIkWtaCSKRTTo4wqia3YA9oXyJw"
      },
      "html_6": {
        "handler": "handler_html_6.landingPage",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "landing-page-6",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-nodejs-dev-html_6",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "HtmlUnderscore6LambdaVersionmnds7OA7rH2RvvFa6QBHMwOllcnF1xxJNvpmJOy4Fus"
      }
    },
    "configValidationMode": "warn",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/Young/projects/aws_nodejs/.serverless/aws-nodejs.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/aws-nodejs/dev/1618992568589-2021-04-21T08:09:28.589Z",
    "artifact": "aws-nodejs.zip"
  }
}